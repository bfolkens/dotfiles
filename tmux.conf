###########################
#  Configuration
###########################

# C-b is not acceptable -- Vim uses it
# set-option -g prefix C-a
# bind-key C-a last-window

# Closing the last window in a session will go to another open window in another session
set-option -g detach-on-destroy off

# MacOS ships with a very old ncurses and terminfo. May need to update terminfo to recognize tmux-256color.
# https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
# set -g default-terminal "screen-256color-bce"
set -g default-terminal "tmux-256color"

set-option -gas terminal-overrides "*:Tc" # true color support
set-option -gas terminal-overrides "*:RGB" # true color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# increase scroll-back history
set -g history-limit 1000000

# use vim key bindings
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 0

# enable utf8 characters
setw -q -g utf8 on

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number and re-name windows dynamically
setw -g automatic-rename on
set -g renumber-windows on

# dynamically update iTerm title
set -g set-titles on

# #T = standard window title (last command)
# #h = short hostname
# #S = session name
# #W = tmux window name
#
set -g set-titles-string "#T : #h > #S > #W"

# focus events enabled for terminals that support them
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Mouse can be used to select panes, select window (by clicking on the status bar),
# resize panes.  For default bindings see `tmux list-keys` and `tmux list-keys -t vi-copy`.
set -g mouse on

###########################
#  Key Bindings
###########################

# paste
unbind C-p
bind C-p paste-buffer

# open windows with path
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# hjkl pane traversal
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# Using christoomey/vim-tmux-navigator in vim
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# This overrides escape :/
# bind -n C-[ previous-window
# bind -n C-] next-window
bind -n C-space last-window

# expanded to show all splits
bind w choose-tree
# simpler window to show only sessions
bind s choose-session

bind C-j new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | sk --reverse | xargs tmux switch-client -t"

# Resizing
# unbind Left
# bind -r Left resize-pane -L 5
# unbind Right
# bind -r Right resize-pane -R 5
# unbind Down
# bind -r Down resize-pane -D 5
# unbind Up
# bind -r Up resize-pane -U 5

# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

# quickly switch panes
unbind ^J
bind ^J select-pane -t :.+

# start with blank name when renaming windows
unbind ,
bind-key , command-prompt -p (rename-window) "rename-window '%%'"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

###########################
# Status Bar
###########################

# set refresh interval for status bar
set -g status-interval 1

# center the status bar
set -g status-justify left

# show session, window, pane in left status bar
set -g status-right-length 60

set -g status-left "#[fg=blue,bold]#S " # session name
# set -ga status-left "#[fg=white,bold]ямл "
# set -ga status-left "#[fg=white,nobold]#(gitmux -timeout 300ms -cfg $HOME/.config/tmux/gitmux.conf) "

# set -g status-right '#[fg=gray,nobold]%a %Y-%m-%d %l:%M %p'
set -g status-right ""

set -g status-position top
set -g status-style 'bg=default,fg=white' # transparent status bar

###########################
# Colors
###########################

set -g pane-border-style bg="#292D3E",fg="#3E4452"
set -g pane-active-border-style fg="#5E6472"
set -g display-panes-colour "#3E4452"
set -g display-panes-active-colour "#7E8492"

# [0 - command]
set -g window-status-format "#[fg=brightblack,nobold,bg=default]["
set -ga window-status-format "#[fg=brightblack,bg=default]#I #F "
set -ga window-status-format "#[fg=white,bg=default]#W"
set -ga window-status-format "#[fg=brightblack,nobold,bg=default]]"

# [0 * command]
set -g window-status-current-format "#[fg=brightblack,nobold,bg=default]["
set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]#I "
set -ga window-status-current-format "#[fg=magenta,nobold,bg=default]#F "
set -ga window-status-current-format "#[fg=white,bold,bg=default]#W"
set -ga window-status-current-format "#[fg=brightblack,nobold,bg=default]]"

#
# Platform specific
#

if-shell "uname | grep -q Darwin" "source-file ~/.tmux/macosx.tmux.conf" "source-file ~/.tmux/linux.tmux.conf"
